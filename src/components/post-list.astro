---
import { CollectionEntry, getCollection } from "astro:content";
import Link from "~/components/link.astro";

interface Props {
  tag?: string;
  max?: number;
}

let { tag, max } = Astro.props;

// get all unique tags
const allnotes = await getCollection("notes");
const allTags = new Set<string>();
allnotes.map((post) => {
  post.data.tags.map((tag) => allTags.add(tag));
});

const sortnotes = (notes: CollectionEntry<"notes">[]) =>
  notes.sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime());

// get notes for current tag
const notes: CollectionEntry<"notes">[] = tag
  ? sortnotes(allnotes.filter(({ data }) => data.tags.includes(tag)))
  : sortnotes(allnotes);

if (!max) max = notes.length + 1;
---

<div>
  <ul role="list" class="mb-4">
    {
      notes.slice(0, max).map((post) => (
        <li class="mb-1 grid max-w-fit">
          <Link href={`/notes/${post.slug}`}>
            <div class="flex items-start gap-12">
              <span class="text-nowrap font-mono text-f-low">
                {post.data.pubDate.toLocaleDateString(undefined, {
                  month: "short",
                  year: "numeric",
                })}
              </span>
              <span>{`{${post.data.title}}`}</span>
            </div>
          </Link>
        </li>
      ))
    }
  </ul>
</div>
